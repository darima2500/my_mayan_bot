import os
import random
import telebot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from flask import Flask, request
from datetime import date, datetime
from waves_schedule import waves_schedule
from language_store import get_language, set_language
from dotenv import load_dotenv
from tones.tones_data import tones_data


def get_current_kin():
    # –ú—ã –∑–Ω–∞–µ–º, —á—Ç–æ 2 –º–∞—è 2025 = –ö–∏–Ω 255 (–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç –¥–ª—è —Ç–µ—Å—Ç–∞)
    start_date = date(2025, 5, 2)
    today = date.today()
    delta_days = (today - start_date).days
    return (255 + delta_days) % 260 or 260


    
def find_wave_by_kin(kin_number):
    for wave in waves_schedule:
        if wave["start_kin"] <= kin_number <= wave["end_kin"]:
            return wave
    return None
    
def get_current_tone(kin_number):
    return (kin_number - 1) % 13 + 1

    

load_dotenv()  # <-- –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = "https://web-production-93b7.up.railway.app"

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

menu_buttons = {
    "en": ["üìÖ Today's Wave", "üé¥ Reflect", "üìñ About the Project", "‚ú® About the Calendar"],
    "ru": ["üìÖ –¢–µ–∫—É—â–∞—è –í–æ–ª–Ω–∞", "üé¥ –†–µ—Ñ–ª–µ–∫—Å–∏—è", "üìñ –û –ø—Ä–æ–µ–∫—Ç–µ", "‚ú® –û –ö–∞–ª–µ–Ω–¥–∞—Ä–µ"]
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    lang_keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    lang_keyboard.add(
        KeyboardButton("üá¨üáß English"),
        KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π")
    )
    bot.send_message(
        message.chat.id,
        "üåø Welcome to the flow of Mayan time.\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –º–∞–π—è–Ω—Å–∫–∏—Ö —ç–Ω–µ—Ä–≥–∏–π! üåø\n\n"
        "üëá Choose your language / –í—ã–±–µ—Ä–∏ —è–∑—ã–∫:",
        reply_markup=lang_keyboard
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
@bot.message_handler(func=lambda message: message.text in ["üá¨üáß English", "üá∑üá∫ –†—É—Å—Å–∫–∏–π"])
def set_user_language(message):
    lang = "en" if message.text == "üá¨üáß English" else "ru"
    set_language(message.chat.id, lang)

    markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    for button in menu_buttons[lang]:
        markup.add(KeyboardButton(button))
    
    welcome_text = "Welcome! Choose an option below:" if lang == "en" else "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)


@bot.message_handler(func=lambda message: message.text in ["üìÖ Today's Wave", "üìÖ –¢–µ–∫—É—â–∞—è –í–æ–ª–Ω–∞"])
def send_today_wave(message):
    lang = get_language(message.chat.id)
    kin_number = get_current_kin()
    tone_number = get_current_tone(kin_number)

    # –æ—Ç–ª–∞–¥–∫–∞:
    bot.send_message(message.chat.id, f"KIN: {kin_number}, TONE: {tone_number}")

    # –ø–æ–∫–∞ –æ—Ç–∫–ª—é—á–∏–º –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ
    # tone_data = tones_data[tone_number][lang]
    # ...


    # –ø–æ–ª—É—á–∞–µ–º name, keywords –∏ description –∏–∑ —Å–ª–æ–≤–∞—Ä—è
    tone_data = tones_data[tone_number][lang]
    tone_name = tone_data["name"]
    tone_keywords = tone_data["keywords"]
    tone_description = tone_data["description"]

    # —Å–æ–±–∏—Ä–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ —Ç–æ–Ω—É
    tone_block = (
        f"üåü *{tone_name}* (Tone {tone_number})\n"
        f"_{tone_keywords}_\n\n"
        f"{tone_description}"
    )
    bot.send_message(message.chat.id, tone_block, parse_mode="Markdown")

    found_wave = find_wave_by_kin(kin_number)

    if found_wave:
        wave_message = found_wave["get_message_func"](lang)
        if wave_message:
            full_message = f"{tone_block}\n\n{wave_message}"
            bot.send_message(message.chat.id, full_message, parse_mode="Markdown")
        else:
            bot.send_message(
                message.chat.id,
                "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –≤–æ–ª–Ω–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞." if lang == "ru" else "Wave information is not available."
            )
    else:
        bot.send_message(
            message.chat.id,
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –≤–æ–ª–Ω–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞." if lang == "ru" else "Wave information is not available."
        )

@bot.message_handler(func=lambda message: message.text in ["üìñ –û –ø—Ä–æ–µ–∫—Ç–µ", "üìñ About the Project"])
def about_project(message):
    lang = get_language(message.chat.id)
    text = (
        "–≠—Ç–æ—Ç –±–æ—Ç ‚Äî –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è —Å–æ–∑–≤—É—á–∏—è —Å —Å–æ–±–æ–π —á–µ—Ä–µ–∑ –∂–∏–≤—É—é —Ç–∫–∞–Ω—å –≤—Ä–µ–º–µ–Ω–∏.\n\n"
        "–ó–¥–µ—Å—å –Ω–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π. "
        "–¶–æ–ª—å–∫–∏–Ω ‚Äî –Ω–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—å —Å–æ–±—ã—Ç–∏–π, –∞ –∫–∞—Ä—Ç–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø—É—Ç–∏. "
        "–û–Ω –ø–æ–º–æ–≥–∞–µ—Ç –æ—â—É—Ç–∏—Ç—å –≥–ª—É–±–∏–Ω–Ω—ã–π —Ä–∏—Ç–º –∂–∏–∑–Ω–∏, –≥–¥–µ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî —É–Ω–∏–∫–∞–ª—å–Ω–∞—è –≤–∏–±—Ä–∞—Ü–∏—è –Ω–∞ –ø—É—Ç–∏ –î—É—à–∏, –¢–µ–ª–∞ –∏ –î—É—Ö–∞.\n\n"
        "–ß–µ—Ä–µ–∑ —Å–∏–Ω—Ç–µ–∑ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –¥—Ä–µ–≤–Ω–∏—Ö –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö —Ü–∏–∫–ª–æ–≤, "
        "—ç—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç —Ç–µ–±—è —Å–æ–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–≤–æ–∏ –∑–µ–º–Ω—ã–µ –∏ –≤—ã—Å—à–∏–µ –∞—Å–ø–µ–∫—Ç—ã –≤ —Ü–µ–ª–æ—Å—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É —á–µ—Ä–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏—é –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ –≤—Ä–µ–º–µ–Ω–∏."
    ) if lang == "ru" else (
        "This bot is a space for attuning to yourself through the living fabric of time.\n\n"
        "Here there are no predictions or instructions. "
        "Only the day's energies ‚Äî the rhythme of the Earth and cosmos ‚Äî inviting you to remember your true nature.\n\n"
        "Tzolkin is not a calendar of events, but a map of your inner journey. "
        "It helps you feel the deeper rhythm of life, where each day is a unique vibration on your path of the soul's growth.\n\n"
        "Through the synthesis of modern technologies and ancient cosmic cycles, "
        "this project builds a bridge between the eternal and the current, inviting you to attune your body, soul and a spirit into a wholeness once again."
    )
    bot.send_message(message.chat.id, text)


questions_ru = [
    "–ß—Ç–æ –º–æ—ë —Ç–µ–ª–æ —Ö–æ—á–µ—Ç —Å–∫–∞–∑–∞—Ç—å –º–Ω–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å?",
    "–í –∫–∞–∫–æ–º –º–µ—Å—Ç–µ –º–æ–µ–π –∂–∏–∑–Ω–∏ —è –ø—Ä–∏—Ç–≤–æ—Ä—è—é—Å—å?",
    "–ß—Ç–æ –º–Ω–µ —Å—Ç–æ–∏—Ç –æ—Ç–ø—É—Å—Ç–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è?",
    "–ö–∞–∫–∞—è —á–∞—Å—Ç—å –º–µ–Ω—è —Ö–æ—á–µ—Ç –±—ã—Ç—å —É—Å–ª—ã—à–∞–Ω–Ω–æ–π?",
    "–ì–¥–µ —è —á—É–≤—Å—Ç–≤—É—é –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–∏?",
    "–û —á—ë–º —Ç–æ—Å–∫—É–µ—Ç –º–æ—ë —Å–µ—Ä–¥—Ü–µ?",
    "–ß—Ç–æ —è –ø—Ä—è—á—É –æ—Ç —Å–∞–º–æ–≥–æ —Å–µ–±—è?",
    "–ß—Ç–æ –≤–æ –º–Ω–µ –≥–æ—Ç–æ–≤–æ —Ä–∞—Å—Ü–≤–µ—Å—Ç–∏?",
    "–ì–¥–µ —è –º–æ–≥—É –±—ã—Ç—å –º—è–≥—á–µ –∫ —Å–µ–±–µ?",
    "–ß—Ç–æ —è –±–æ—é—Å—å –ø—Ä–∏–∑–Ω–∞—Ç—å –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π?"
]

questions_en = [
    "What is my body trying to tell me right now?",
    "Where in my life am I pretending?",
    "What am I ready to let go of today?",
    "Which part of me wants to be heard?",
    "Where do I feel tension inside?",
    "What is my heart longing for?",
    "What am I hiding from myself?",
    "What within me is ready to bloom?",
    "Where can I be softer with myself?",
    "What am I afraid to admit to myself?"
]

@bot.message_handler(func=lambda message: message.text in ["üé¥ –†–µ—Ñ–ª–µ–∫—Å–∏—è", "üé¥ Reflect"])
def reflect(message):
    lang = get_language(message.chat.id)
    
    questions = questions_ru if lang == "ru" else questions_en
    selected_question = random.choice(questions)
    
    bot.send_message(message.chat.id, selected_question)
    
@bot.message_handler(func=lambda message: message.text in ["‚ú® –û –ö–∞–ª–µ–Ω–¥–∞—Ä–µ", "‚ú® About the Calendar"])
def about_calendar(message):
    lang = get_language(message.chat.id)
    text = (
        "–¶–æ–ª—å–∫–∏–Ω ‚Äî —ç—Ç–æ —Å–≤—è—â–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –º–∞–π—è –∏–∑ 260 –¥–Ω–µ–π, –æ—Ç—Ä–∞–∂–∞—é—â–∏–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å–∞–º–æ–≥–æ —Ç–≤–æ—Ä–µ–Ω–∏—è.\n\n"
        "–û–Ω —Å–ø–ª–µ—Ç–∞–µ—Ç 20 –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤ ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö —Å–∏–ª —Å–æ–∑–Ω–∞–Ω–∏—è ‚Äî –∏ 13 —Ç–æ–Ω–æ–≤ ‚Äî —ç—Ç–∞–ø–æ–≤ –¥–≤–∏–∂–µ–Ω–∏—è –∏ —Ä–æ—Å—Ç–∞. "
        "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—É—é –≤—Å—Ç—Ä–µ—á—É –∞—Ä—Ö–µ—Ç–∏–ø–∞ –∏ —Ç–æ–Ω–∞, —Ä–æ–∂–¥–∞—è –∂–∏–≤—É—é –≤–∏–±—Ä–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–µ—Ä–∫–∞–ª–∏—Ç —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –∂–∏–∑–Ω–∏.\n\n"
        "–¶–æ–ª—å–∫–∏–Ω ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–ø–æ—Å–æ–± –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤—Ä–µ–º—è. "
        "–≠—Ç–æ –∫–æ—Å–º–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ —Ç–≤–æ–µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø—É—Ç–∏, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è, –∫–∞–∫ —Ü–∏–∫–ª—ã —Ä–æ–∂–¥–µ–Ω–∏—è, —Ä–æ—Å—Ç–∞, —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂—É—Ç—Å—è —á–µ—Ä–µ–∑ —Ç–µ–±—è, "
        "—Å–æ–µ–¥–∏–Ω—è—è —Ç–µ–±—è —Å —Ä–∏—Ç–º–∞–º–∏ –ó–µ–º–ª–∏, –∑–≤—ë–∑–¥ –∏ —Å–∞–º–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∂–∏–∑–Ω–∏.\n\n"
        "–°–æ–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—è—Å—å —Å —ç–Ω–µ—Ä–≥–∏—è–º–∏ –¶–æ–ª—å–∫–∏–Ω–∞, —Ç—ã –º–æ–∂–µ—à—å –≥–ª—É–±–∂–µ –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–∏–Ω–Ω—É—é –ø—Ä–∏—Ä–æ–¥—É, "
        "—É–≥–ª—É–±–∏—Ç—å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –º–æ–º–µ–Ω—Ç–µ –∏ –∏–¥—Ç–∏ –ø–æ —Å–≤–æ–µ–º—É –ø—É—Ç–∏ —Å –±–æ–ª—å—à–µ–π —è—Å–Ω–æ—Å—Ç—å—é –∏ –ª—ë–≥–∫–æ—Å—Ç—å—é."
    ) if lang == "ru" else (
        "Tzolkin is the sacred Mayan calendar of 260 days, reflecting the inner architecture of creation itself.\n\n"
        "It weaves together 20 archetypes ‚Äî universal forces of consciousness ‚Äî and 13 tones ‚Äî stages of movement and growth. "
        "Each day is a unique meeting point between an archetype and a tone, creating a living vibration that mirrors the unfolding of life.\n\n"
        "Tzolkin is not just a way to track time ‚Äî it is a cosmic map of your inner journey. "
        "It shows how cycles of birth, growth, transformation, and renewal move through your being, "
        "connecting you with the rhythms of the Earth, the stars, and the source of life itself.\n\n"
        "Through attunement to the Tzolkin, you can remember your true nature, deepen your awareness of the present moment, "
        "and walk your path with greater clarity and grace."
    )
    bot.send_message(message.chat.id, text)

ALLOWED_TEXTS = [
    "/start",
    "üìÖ Today's Wave",
    "üìÖ –¢–µ–∫—É—â–∞—è –í–æ–ª–Ω–∞",
    "üé¥ Reflect",
    "üé¥ –†–µ—Ñ–ª–µ–∫—Å–∏—è",
    "üìñ About the Project",
    "üìñ –û –ø—Ä–æ–µ–∫—Ç–µ",
    "‚ú® About the Calendar",
    "‚ú® –û –ö–∞–ª–µ–Ω–¥–∞—Ä–µ",
    "üá¨üáß English",
    "üá∑üá∫ –†—É—Å—Å–∫–∏–π"
]

@bot.message_handler(func=lambda message: message.text in ALLOWED_TEXTS)
def handle_allowed_buttons(message):
    # –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º, –ø—Ä–æ—Å—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º —Ä–∞–±–æ—Ç–∞—Ç—å
    pass

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –¥–ª—è Telegram
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_string)
        bot.process_new_updates([update])
        return '', 200
    else:
        return 'Invalid request', 400

# --- –ö–æ—Ä–Ω–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—á–∫–∞ Railway (—á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å, —á—Ç–æ –ø—Ä–æ–µ–∫—Ç –∂–∏–≤–æ–π)
@app.route("/")
def index():
    return "Hello, this is Mayan Bot!"

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –∏ –∑–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞
if __name__ == "__main__":
    bot.remove_webhook()
    bot.set_webhook(url=f"{WEBHOOK_URL}/{TOKEN}", allowed_updates=["message"])
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
