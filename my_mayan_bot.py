# my_mayan_bot.py (–æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –¥–ª—è webhook)

import os
import telebot
from telebot.types import Update
from flask import Flask, request
from waves_schedule import waves_schedule
from datetime import date, datetime
from language_store import get_language, set_language


TOKEN = "8056299109:AAGalA54I7CoZ2mfR0FLtVohgAJ9zmmYEPc"
WEBHOOK_URL = "https://mymayanbot-production.up.railway.app"  # –ú—ã –¥–æ–±–∞–≤–∏–º —ç—Ç—É –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ Railway –ø–æ—Å–ª–µ

bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

menu_buttons = {
    "en": ["\ud83d\udcc5 Today's Wave", "\ud83c\udfb4 Reflect", "\ud83d\udcd3 About the Project", "\u2728 About the Calendar"],
    "ru": ["\ud83d\udcc5 \u0422\u0435\u043a\u0443\u0449\u0430\u044f \u0412\u043e\u043b\u043d\u0430", "\ud83c\udfb4 \u0420\u0435\u0444\u043b\u0435\u043a\u0441\u0438\u044f", "\ud83d\udcd3 \u041e \u043f\u0440\u043e\u0435\u043a\u0442\u0435", "\u2728 \u041e \u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u0435"]
}

@bot.message_handler(commands=['start'])
def send_welcome(message):
    # –®–ª—ë–º –∫—Ä–∞—Å–∏–≤–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    bot.send_message(
        message.chat.id,
        "üåø Welcome to the flow of Mayan time.\n\n"
        "Here you can tune into the energies of each day and reconnect with your natural rhythm.\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –º–∞–π—è–Ω—Å–∫–∏—Ö —ç–Ω–µ—Ä–≥–∏–π! üåø\n\n"
        "–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–æ–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å—Å—è —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º –ø–æ-–Ω–æ–≤–æ–º—É"
    )
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±–æ—Ä —è–∑—ã–∫–∞
    lang_keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    lang_keyboard.add(
        telebot.types.KeyboardButton("üá¨üáß English"),
        telebot.types.KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π")
    )
    bot.send_message(message.chat.id, "Choose your language / –í—ã–±–µ—Ä–∏ —è–∑—ã–∫:", reply_markup=lang_keyboard)

@bot.message_handler(func=lambda message: message.text in ["üá¨üáß English", "üá∑üá∫ –†—É—Å—Å–∫–∏–π"])
def set_user_language(message):
    lang = "en" if message.text == "üá¨üáß English" else "ru"
    set_language(message.chat.id, lang)

    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    for button in menu_buttons[lang]:
        markup.add(telebot.types.KeyboardButton(button))
    
    welcome_text = "Welcome! Choose an option below:" if lang == "en" else "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∏–∂–µ:"
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)



# Flask –æ–±—Ä–∞–±–æ—Ç–∫–∞ webhook –∑–∞–ø—Ä–æ—Å–∞
@app.route(f"/{TOKEN}", methods=["POST"])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_string = request.get_data().decode('utf-8')
        update = Update.de_json(json_string)
        bot.process_new_updates([update])
        return "", 200
    else:
        return "Invalid request", 400

# –ö–æ—Ä–Ω–µ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Å—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç, —á—Ç–æ –±–æ—Ç –∂–∏–≤
@app.route("/")
def index():
    return "Hello, this is Mayan Bot!"


@bot.message_handler(func=lambda message: message.text in ["üìÖ Today's Wave", "üìÖ –¢–µ–∫—É—â–∞—è –í–æ–ª–Ω–∞"])
def send_today_wave(message):
    lang = get_language(message.chat.id)
    today = date.today()

    found_wave = None
    for wave in waves_schedule:
        start = datetime.strptime(wave["start_date"], "%Y-%m-%d").date()
        end = datetime.strptime(wave["end_date"], "%Y-%m-%d").date()
        if start <= today <= end:
            found_wave = wave
            break

    if found_wave:
        wave_message = found_wave["get_message_func"](lang)
        if wave_message:
            bot.send_message(message.chat.id, wave_message, parse_mode="Markdown")
        else:
            bot.send_message(
                message.chat.id,
                "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –≤–æ–ª–Ω–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞." if lang == "ru" else "Wave information is not available."
            )
    else:
        bot.send_message(
            message.chat.id,
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–π –≤–æ–ª–Ω–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞." if lang == "ru" else "Wave information is not available."
        )


# üé¥ –†–µ—Ñ–ª–µ–∫—Å–∏—è –∏–ª–∏ Reflect
@bot.message_handler(func=lambda message: message.text in ["üé¥ –†–µ—Ñ–ª–µ–∫—Å–∏—è", "üé¥ Reflect"])
def reflect(message):
    lang = get_language(message.chat.id)
    questions = [
        "–ß—Ç–æ –≤–Ω—É—Ç—Ä–∏ –º–µ–Ω—è –≥–æ—Ç–æ–≤–æ –∫ –∑–∞–±–æ—Ç–µ, –∞ –Ω–µ –∫ –¥–∞–≤–ª–µ–Ω–∏—é?",
        "–ì–¥–µ –≤ –º–æ–µ–π –∂–∏–∑–Ω–∏ —è –ø—Ä–∏—Ç–≤–æ—Ä—è—é—Å—å?",
        "–ß—Ç–æ —è –≥–æ—Ç–æ–≤(–∞) –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å –ª—é–±–æ–≤—å—é?",
        "–ú–æ–≥—É –ª–∏ —è –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å —Å–æ–±–æ–π?",
        "–ß—Ç–æ –∑–Ω–∞–µ—Ç –º–æ—ë —Ç–µ–ª–æ, –æ —á—ë–º –∑–∞–±—ã–≤–∞–µ—Ç —Ä–∞–∑—É–º?"
    ] if lang == "ru" else [
        "What in me is ready to be nourished, not pushed?",
        "Where in my life am I pretending?",
        "What am I ready to complete?",
        "Can I meet myself fully?",
        "What does my body know that my mind ignores?"
    ]
    import random
    bot.send_message(message.chat.id, random.choice(questions))

# üìñ –û –ø—Ä–æ–µ–∫—Ç–µ –∏–ª–∏ About the Project
@bot.message_handler(func=lambda message: message.text in ["üìñ –û –ø—Ä–æ–µ–∫—Ç–µ", "üìñ About the Project"])
def about_project(message):
    lang = get_language(message.chat.id)
    text = (
        "–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –∫–∞–∫ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Å–æ–ø—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏—è —Å –¥—Ä–µ–≤–Ω–µ–π –º—É–¥—Ä–æ—Å—Ç—å—é –º–∞–π—è–Ω—Å–∫–æ–≥–æ –∫–∞–ª–µ–Ω–¥–∞—Ä—è. "
        "–ó–¥–µ—Å—å –Ω–µ—Ç –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π ‚Äî —Ç–æ–ª—å–∫–æ –ø–æ–¥—Å–∫–∞–∑–∫–∏ —ç–Ω–µ—Ä–≥–∏–π –¥–Ω—è, –ø–æ–º–æ–≥–∞—é—â–∏–µ —Å–æ–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å—Å—è —Å —Å–æ–±–æ–π."
    ) if lang == "ru" else (
        "This bot is a space to connect with the ancient wisdom of the Mayan calendar. "
        "No predictions ‚Äî only hints from the day's energies to help you align with yourself."
    )
    bot.send_message(message.chat.id, text)

@bot.message_handler(func=lambda message: message.text in ["‚ú® –û –ö–∞–ª–µ–Ω–¥–∞—Ä–µ", "‚ú® About the Calendar"])
def about_calendar(message):
    lang = get_language(message.chat.id)
    text = (
        "–¶–æ–ª—å–∫–∏–Ω ‚Äî —ç—Ç–æ —Å–≤—è—â–µ–Ω–Ω—ã–π –∫–∞–ª–µ–Ω–¥–∞—Ä—å –º–∞–π—è –∏–∑ 260 –¥–Ω–µ–π, –æ—Ç—Ä–∞–∂–∞—é—â–∏–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å–∞–º–æ–≥–æ —Ç–≤–æ—Ä–µ–Ω–∏—è.\n\n"
        "–û–Ω —Å–ø–ª–µ—Ç–∞–µ—Ç 20 –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤ ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö —Å–∏–ª —Å–æ–∑–Ω–∞–Ω–∏—è ‚Äî –∏ 13 —Ç–æ–Ω–æ–≤ ‚Äî —ç—Ç–∞–ø–æ–≤ –¥–≤–∏–∂–µ–Ω–∏—è –∏ —Ä–æ—Å—Ç–∞. "
        "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—É—é –≤—Å—Ç—Ä–µ—á—É –∞—Ä—Ö–µ—Ç–∏–ø–∞ –∏ —Ç–æ–Ω–∞, —Ä–æ–∂–¥–∞—è –∂–∏–≤—É—é –≤–∏–±—Ä–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–µ—Ä–∫–∞–ª–∏—Ç —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –∂–∏–∑–Ω–∏.\n\n"
        "–¶–æ–ª—å–∫–∏–Ω ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Å–ø–æ—Å–æ–± –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤—Ä–µ–º—è. "
        "–≠—Ç–æ –∫–æ—Å–º–∏—á–µ—Å–∫–∞—è –∫–∞—Ä—Ç–∞ —Ç–≤–æ–µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –ø—É—Ç–∏, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–∞—è, –∫–∞–∫ —Ü–∏–∫–ª—ã —Ä–æ–∂–¥–µ–Ω–∏—è, —Ä–æ—Å—Ç–∞, —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–≤–∏–∂—É—Ç—Å—è —á–µ—Ä–µ–∑ —Ç–µ–±—è, "
        "—Å–æ–µ–¥–∏–Ω—è—è —Ç–µ–±—è —Å —Ä–∏—Ç–º–∞–º–∏ –ó–µ–º–ª–∏, –∑–≤—ë–∑–¥ –∏ —Å–∞–º–æ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –∂–∏–∑–Ω–∏.\n\n"
        "–°–æ–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—è—Å—å —Å —ç–Ω–µ—Ä–≥–∏—è–º–∏ –¶–æ–ª—å–∫–∏–Ω–∞, —Ç—ã –º–æ–∂–µ—à—å –≥–ª—É–±–∂–µ –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å–≤–æ—é –∏—Å—Ç–∏–Ω–Ω—É—é –ø—Ä–∏—Ä–æ–¥—É, "
        "—É–≥–ª—É–±–∏—Ç—å –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –≤ –Ω–∞—Å—Ç–æ—è—â–µ–º –º–æ–º–µ–Ω—Ç–µ –∏ –∏–¥—Ç–∏ –ø–æ —Å–≤–æ–µ–º—É –ø—É—Ç–∏ —Å –±–æ–ª—å—à–µ–π —è—Å–Ω–æ—Å—Ç—å—é –∏ –ª—ë–≥–∫–æ—Å—Ç—å—é."
    ) if lang == "ru" else (
        "Tzolkin is the sacred Mayan calendar of 260 days, reflecting the inner architecture of creation itself.\n\n"
        "It weaves together 20 archetypes ‚Äî universal forces of consciousness ‚Äî and 13 tones ‚Äî stages of movement and growth. "
        "Each day is a unique meeting point between an archetype and a tone, creating a living vibration that mirrors the unfolding of life.\n\n"
        "Tzolkin is not just a way to track time ‚Äî it is a cosmic map of your inner journey. "
        "It shows how cycles of birth, growth, transformation, and renewal move through your being, "
        "connecting you with the rhythms of the Earth, the stars, and the source of life itself.\n\n"
        "Through attunement to the Tzolkin, you can remember your true nature, deepen your awareness of the present moment, "
        "and walk your path with greater clarity and grace."
    )
    bot.send_message(message.chat.id, text)
    
@bot.message_handler(func=lambda message: True)
def debug_message(message):
    print(f"üîç User sent text: {message.text}")
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_unexpected_message(message):
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –≤—Å—ë, —á—Ç–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ –ø–æ–¥ –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
    pass
if __name__ == "__main__":
    bot.remove_webhook()
    
    if not WEBHOOK_URL or not TOKEN:
        print(f"CRITICAL ERROR: Missing WEBHOOK_URL or TOKEN!")
        print(f"WEBHOOK_URL: {WEBHOOK_URL}")
        print(f"TOKEN: {TOKEN}")
        exit(1)  # <-- –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ
    
    bot.set_webhook(url=f"{WEBHOOK_URL}/{TOKEN}", allowed_updates=["message"])
    print("Webhook set successfully!")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))



